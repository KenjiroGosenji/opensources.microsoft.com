using System;
using System.Runtime.InteropServices;

class Program
{
    [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    public static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

    [DllImport("user32.dll")]
    public static extern IntPtr SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);

    public const int WM_SYSCOMMAND = 0x0112;
    public const int SC_MAXIMIZE = 0xF030;

    static void Main()
    {
        IntPtr windowHandle = FindWindow("Shell_TridentBrowserHost", "Windows 11 Surface");

        if (windowHandle != IntPtr.Zero)
        {
            SendMessage(windowHandle, WM_SYSCOMMAND, SC_MAXIMIZE, 0);
            Console.WriteLine("Window maximized");
        }
        else
        {
            Console.WriteLine("Window not found");
        }
    }
}
